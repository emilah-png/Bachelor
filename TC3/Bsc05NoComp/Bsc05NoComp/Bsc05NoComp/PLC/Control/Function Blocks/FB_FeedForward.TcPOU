<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1">
  <POU Name="FB_FeedForward" Id="{5f187efa-a862-40d3-8f44-04c8cf0d06e0}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_FeedForward
VAR_INPUT
	fPs 			: LREAL; // [Bar]
	fPa 			: LREAL; // [Bar]
	fPb 			: LREAL; // [Bar]
	fXDot			: LREAL; // [m/s]
	fDeltaP0		: LREAL; // [Bar]
	fArea			: LREAL; // [mm^2]
	fPhi			: LREAL; // Relation between Areas
	fMaxFlowUp		: LREAL; // [L/min]
	fMaxFlowDown	: LREAL; // [L/min]
	fDeadBandUp		: LREAL; 
	fDeadBandDown	: LREAL;
END_VAR
VAR_OUTPUT
	fUFF 			: LREAL;
END_VAR
VAR
	fSpoolTravel 	: LREAL; 	// Maximum Spool Travel
	fSlopeCharUp	: LREAL;	// Valve Slope Characteristic [mm/(L/min)]
	fSlopeCharDown	: LREAL;	// Valve Slope Characteristic [mm/(L/min)]
	fDeltaP_Norm	: LREAL; 	// Pressure Drop with Compansator
	
	fFlow			: LREAL; 	// Wanted Flow
	fFlowLM			: LREAL;
	fDeltaP			: LREAL; 	// Pressure Drop
	fDeltaP_Ref		: LREAL; 	// Referance Pressure Drop
	fFlowRef		: LREAL; 	// Refereance Flow
	
	fUFFTemp		: LREAL;	// Temp Signal Out
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[fArea 			:= fArea/(1000000.0); 					// Area of Piston Side
fSpoolTravel 	:= 7.0; 								// Maximum Spool Travel
// fSlopeCharUp	:= (fSpoolTravel)/fMaxFlowUp; 			// Valve Slope Characteristic [mm/(L/min)]
// fSlopeCharDown	:= (fSpoolTravel)/fMaxFlowDown; 		// Valve Slope Characteristic [mm/(L/min)]
fDeltaP_Norm	:= fDeltaP0 * 100000.0;

IF fXDot > 0.0 THEN
	
	fFlow := fXDot * fArea;
	fFlowLM := fFlow * 60000;
	fDeltaP := (fPs - fPa) * 100000.0;
	IF fDeltaP < 100 THEN
		fDeltaP := 100;
	ELSE
		fDeltaP := fDeltaP;
	END_IF
	fDeltaP_Ref := ABS(fDeltaP_Norm/ (fDeltaP));
	fFlowRef := (fFlow * SQRT(fDeltaP_Ref)) * 60000.0;
	fUFFTemp := fFlowRef/fMaxFlowUp;
	fUFFTemp := fUFFTemp * (1.0-fDeadBandUp);
	
ELSIF fXDot < 0.0 THEN
	
	fFlow := fXDot * fArea * fPhi;
	fDeltaP := (fPs - fPb) * 100000.0;
	IF fDeltaP < 100 THEN
		fDeltaP := 100;
	ELSE
		fDeltaP := fDeltaP;
	END_IF
	fDeltaP_Ref := ABS(fDeltaP_Norm/(fDeltaP));
	fFlowRef := (fFlow * SQRT(fDeltaP_Ref)) * 60000.0;
	fUFFTemp := fFlowRef/fMaxFlowDown; //fUFFTemp :=	(fFlowRef * fSlopeCharDown) / fSpoolTravel;
	fUFFTemp := fUFFTemp*(1.0-fDeadBandDown);
	
ELSE
	
	fUFFTemp := 0.0;		

END_IF

IF fUFFTemp > 1.0 THEN
	fUFF := 1.0;
ELSIF fUFFTemp < -1.0 THEN
	fUFF := -1.0;
ELSE
	fUFF := fUFFTemp;
END_IF


]]></ST>
    </Implementation>
  </POU>
</TcPlcObject>