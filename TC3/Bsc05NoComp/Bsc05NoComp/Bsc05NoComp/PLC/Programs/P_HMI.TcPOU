<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1">
  <POU Name="P_HMI" Id="{1d09e2f8-ad02-42e7-aee8-b005510e241b}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM P_HMI
VAR
	fbDerivatorMainSpeed	: FB_Derivator;
	fbDerivatorJibSpeed		: FB_Derivator;
	fMainVelocity			: LREAL;
	fJibVelocity			: LREAL;

END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[fbDerivatorMainSpeed(
	ssMethodType := 1,
	fSignal := G_OPC.fMainPistonPosition.fDanielFilter2,
	fSignalDerivative => fMainVelocity
);

fbDerivatorJibSpeed(
	ssMethodType := 1,
	fSignal := G_OPC.fJibPistonPosition.fDanielFilter2,
	fSignalDerivative => fJibVelocity
);

G_OPC.bMeasurement := G_HMI.bstepp_button;

IF fMainVelocity < -0.001 OR fMainVelocity > 0.001 THEN
	G_OPC.fMainPistonVelocity := fMainVelocity;
ELSE
	G_OPC.fMainPistonVelocity := 0.0;
END_IF

IF fJibVelocity < -0.001 OR fJibVelocity > 0.001 THEN
	G_OPC.fJibPistonVelocity := fJibVelocity;
ELSE
	G_OPC.fJibPistonVelocity := 0.0;
END_IF


IF G_HMI.nManuelMode < E_ManuelModes.ManDirect THEN
	G_HMI.nManuelMode := E_ManuelModes.ManDirect;
ELSIF G_HMI.nManuelMode > E_ManuelModes.ManSpeed THEN
	G_HMI.nManuelMode := E_ManuelModes.ManSpeed;
END_IF

IF G_HMI.nCounter < E_Modes.Manuel THEN
	G_HMI.nCounter := E_Modes.Manuel;
ELSIF G_HMI.nCounter > E_Modes.Auto THEN
	G_HMI.nCounter := E_Modes.Auto; 
END_IF

IF G_HMI.nAutoMode < E_AutoModes.Normal THEN
	G_HMI.nAutoMode := E_AutoModes.Normal;
ELSIF G_HMI.nAutoMode > E_AutoModes.Smart THEN
	G_HMI.nAutoMode := E_AutoModes.Smart;
END_IF

G_Parameters.fConst1 := G_HMI.fNumPad1;
G_Parameters.fConst2 := G_HMI.fNumPad2;

IF G_Enables.bErrorOne THEN
	G_Enables.bEnableOne := FALSE;
ELSE
	G_Enables.bEnableOne := G_Enables.bEnableOne;
END_IF

IF G_Enables.bErrorTwo THEN
	G_Enables.bEnableTwo := FALSE;
ELSE
	G_Enables.bEnableTwo := G_Enables.bEnableTwo;
END_IF

// IF G_Enables.bHoming THEN
// 	G_Enables.bEnablePID := FALSE;
// ELSE
// 	G_Enables.bEnablePID := G_Enables.bEnablePID;
// END_IF

IF G_HMI.nHomingMode < 0 THEN 
	G_HMI.nHomingMode := 0;
ELSIF G_HMI.nHomingMode > G_Homing.nArrLen+1 THEN
	G_HMI.nHomingMode := G_Homing.nArrLen + 1;
ELSE
	G_HMI.nHomingMode := G_HMI.nHomingMode;
END_IF

]]></ST>
    </Implementation>
  </POU>
</TcPlcObject>