<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1">
  <POU Name="P_PID" Id="{8618f120-26c6-4eb7-b274-74ff26057632}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM P_PID
VAR
	fbOnePID : FB_PID;
	fbTwoPID : FB_PID;
	fbIntegrator : FB_Integrator;
	fbDerivator : FB_Derivator;
	fbDerivatorFiltering : FB_Filtering;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[
IF (G_Enables.bEnablePID AND NOT(G_HMI.nCounter = 2)) THEN
	
	fbDerivatorFiltering(
		ssMethodType := 1,
		Signal := fbPID.fSignalD,
		Num := G_FilterConstants.fDerivatorFilterNum,
		Denz := G_FilterConstants.fDerivatorFilterDenz,
		Den := G_FilterConstants.fDerivatorFilterDen,
		Initial := G_FilterConstants.fDerivatorFilterInit,
		Signal_Filtered => fbDerivator.fSignal
	);
	
	fbIntegrator(
		ssMethodType := BOOL_TO_SINT(G_Inputs.bStartButton),
		fSignal := fbPID.fSignalI,
		fSignalIntegrated => fbPID.fSignalIntegrated
	);
	fbDerivator(
		ssMethodType := BOOL_TO_SINT(G_Inputs.bStartButton),
		fSignal := fbPID.fSignalD,
		fSignalDerivative => fbPID.fSignalDerivated
	);

	fbOnePID(
		fX := G_OPC.fXRef,
		fXReal := G_OPC.fPistonPosition,
		fKp := G_Parameters.fP,
		fKi := G_Parameters.fI,
		fKd := G_Parameters.fD,
		
		fError => G_OPC.fError,
		fSignalAdjusted => G_OPC.fSignalPID
	);

END_IF


]]></ST>
    </Implementation>
  </POU>
</TcPlcObject>