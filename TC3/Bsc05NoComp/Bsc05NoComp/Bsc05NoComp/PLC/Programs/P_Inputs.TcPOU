<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1">
  <POU Name="P_Inputs" Id="{94ed4cce-6a16-4a20-9eff-b4a1e6338584}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM P_Inputs
VAR
	// Supply
	fbNormPs 					: FB_Normalize;
	
	// Main
	fbNormMainPa 				: FB_Normalize;
	fbNormMainPb 				: FB_Normalize;
	fbNormMainPaLower 			: FB_Normalize;
	fbNormMainPistonPosition 	: FB_PositionInputScaling;
	
	// Jib
	fbNormJibPa 				: FB_Normalize;
	fbNormJibPb 				: FB_Normalize;
	fbNormJibPaLower 			: FB_Normalize;
	fbNormJibPbLower 			: FB_Normalize;
	fbNormJibPistonPosition 	: FB_PositionInputScaling;

	// Jib
	fbNormWinchPa 				: FB_Normalize;
	fbNormWinchPb 				: FB_Normalize;
	fbNormWinchEncoderA			: FB_Normalize;
	fbNormWinchEncoderB			: FB_Normalize;

	// Joystick
	fbJoystickWinch 			: FB_JoystickInputScaling;
	fbJoystickRotation 			: FB_JoystickInputScaling;
	fbJoystickMain 				: FB_JoystickInputScaling;
	fbJoystickJib 				: FB_JoystickInputScaling;
	fbJoystickExtrude 			: FB_JoystickInputScaling;
	
	// Buttons
	
	
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[
// Supply
fbNormPs(
	nRawInput := G_Inputs.nRawSupplyPs,
	fMaxValue := 400.0, 			// [Bar]
	fNormalizedInput => G_OPC.fPs.fSignal
);

// Main
fbNormMainPa(
	nRawInput := G_Inputs.nRawMainPa,
	fMaxValue := 400.0, 			// [Bar]
	fNormalizedInput => G_OPC.fMainPa.fSignal
);

fbNormMainPb(
	nRawInput := G_Inputs.nRawMainPb,
	fMaxValue := 400.0, 			// [Bar]
	fNormalizedInput => G_OPC.fMainPb.fSignal
);

fbNormMainPaLower(
	nRawInput := G_Inputs.nRawMainPaLower,
	fMaxValue := 400.0, 			// [Bar]
	fNormalizedInput => G_OPC.fMainPaLower.fSignal
);

fbNormMainPistonPosition(
	nRawInput := G_Inputs.nRawMainPistonPosition,
	fMaxOutputValue := G_Parameters.fMaxStrokeMain,
	fOutput => G_OPC.fMainPistonPosition.fSignal
);
	
// Jib
fbNormJibPa(
	nRawInput := G_Inputs.nRawJibPa,
	fMaxValue := 400.0, 			// [Bar]
	fNormalizedInput => G_OPC.fJibPa.fSignal
);

fbNormJibPb(
	nRawInput := G_Inputs.nRawJibPb,
	fMaxValue := 400.0, 			// [Bar]
	fNormalizedInput => G_OPC.fJibPb.fSignal
);

fbNormJibPaLower(
	nRawInput := G_Inputs.nRawJibPaLower,
	fMaxValue := 400.0, 			// [Bar]
	fNormalizedInput => G_OPC.fJibPaLower.fSignal
);

fbNormJibPbLower(
	nRawInput := G_Inputs.nRawJibPbLower,
	fMaxValue := 400.0, 			// [Bar]
	fNormalizedInput => G_OPC.fJibPbLower.fSignal
);

fbNormJibPistonPosition(
	nRawInput := G_Inputs.nRawJibPistonPosition,
	fMaxOutputValue := G_Parameters.fMaxStrokeJib,
	fOutput => G_OPC.fJibPistonPosition.fSignal
);

// Winch
fbNormWinchPa(
	nRawInput := G_Inputs.nRawMainPa,
	fMaxValue := 400.0, 			// [Bar]
	fNormalizedInput => G_OPC.fWinchPa.fSignal
);

fbNormWinchPb(
	nRawInput := G_Inputs.nRawMainPb,
	fMaxValue := 400.0, 			// [Bar]
	fNormalizedInput => G_OPC.fWinchPb.fSignal
);

// Joystick
fbJoystickWinch(
	nRawInput := G_Inputs.nRawJoystickWinch,
	bEnable := TRUE,
	fOutput => G_OPC.fJoystickWinch
);

fbJoystickRotation(
	nRawInput := G_Inputs.nRawJoystickRotation,
	bEnable := TRUE,
	fOutput => G_OPC.fJoystickRotation
);

fbJoystickMain(
	nRawInput := G_Inputs.nRawJoystickMain,
	bEnable := TRUE,
	fOutput => G_OPC.fJoystickMain
);

fbJoystickJib(
	nRawInput := G_Inputs.nRawJoystickJib,
	bEnable := TRUE,
	fOutput => G_OPC.fJoystickJib
);

fbJoystickExtrude(
	nRawInput := G_Inputs.nRawJoystickExtrude,
	bEnable := TRUE,
	fOutput => G_OPC.fJoystickExtrude
);

]]></ST>
    </Implementation>
  </POU>
</TcPlcObject>